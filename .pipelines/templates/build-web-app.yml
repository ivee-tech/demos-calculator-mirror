parameters:
- name: projects
  type: string
  default: '**/*.csproj'
# - name: feed
#   type: string
- name: buildConfiguration
  type: string
- name: testProjects
  type: string
  default: '**/*[Uu]nit[Tt]ests/*.csproj'
- name: webProjName
  type: string

jobs:
- job: Build_Web_App_Job
  steps:
  - task: PowerShell@2
    inputs:
      targetType: inline
      script: |
        if(Test-Path ${{ parameters.webProjName }}/appsettings.Development.json) {
          Remove-Item ${{ parameters.webProjName }}/appsettings.Development.json -Force -ErrorAction SilentlyContinue
        }
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: ${{ parameters.projects }}
      # vstsFeed: '${{ parameters.feed }}'
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: ${{ parameters.projects }}
      arguments: '--configuration ${{ parameters.buildConfiguration }}'
  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      projects: ${{ parameters.testProjects }}
      arguments: '--configuration ${{ parameters.buildConfiguration }}' 
  - task: DotNetCoreCLI@2
    displayName: 'Publish ${{ parameters.webProjName }}'
    inputs:
      command: publish
      publishWebProjects: false
      projects: '**/${{ parameters.webProjName }}.csproj'
      arguments: '--configuration ${{ parameters.buildConfiguration }} --output $(build.artifactstagingdirectory)/${{ parameters.webProjName }}'
      zipAfterPublish: True
  - publish: '$(build.artifactstagingdirectory)/${{ parameters.webProjName }}'
    displayName: 'Publish Artifact'
    artifact: '${{ parameters.webProjName }}'
